//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieOrchBusinessLayer.MovieService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseInput", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Inp" +
        "ut")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.MovieInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.StakeholderInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.IdentificationInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.MultipleIdentificationsInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.RelationInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.WatchlistInput))]
    public partial class BaseInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieInput", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Inp" +
        "ut")]
    [System.SerializableAttribute()]
    public partial class MovieInput : MovieOrchBusinessLayer.MovieService.BaseInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.Genre GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaytimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cover {
            get {
                return this.CoverField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverField, value) != true)) {
                    this.CoverField = value;
                    this.RaisePropertyChanged("Cover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.Genre Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((this.GenreField.Equals(value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Playtime {
            get {
                return this.PlaytimeField;
            }
            set {
                if ((this.PlaytimeField.Equals(value) != true)) {
                    this.PlaytimeField = value;
                    this.RaisePropertyChanged("Playtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StakeholderInput", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Inp" +
        "ut")]
    [System.SerializableAttribute()]
    public partial class StakeholderInput : MovieOrchBusinessLayer.MovieService.BaseInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountOscarsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.Sex SexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOscars {
            get {
                return this.CountOscarsField;
            }
            set {
                if ((this.CountOscarsField.Equals(value) != true)) {
                    this.CountOscarsField = value;
                    this.RaisePropertyChanged("CountOscars");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.Sex Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentificationInput", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Inp" +
        "ut")]
    [System.SerializableAttribute()]
    public partial class IdentificationInput : MovieOrchBusinessLayer.MovieService.BaseInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultipleIdentificationsInput", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Inp" +
        "ut")]
    [System.SerializableAttribute()]
    public partial class MultipleIdentificationsInput : MovieOrchBusinessLayer.MovieService.BaseInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] IdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Ids {
            get {
                return this.IdsField;
            }
            set {
                if ((object.ReferenceEquals(this.IdsField, value) != true)) {
                    this.IdsField = value;
                    this.RaisePropertyChanged("Ids");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelationInput", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Inp" +
        "ut")]
    [System.SerializableAttribute()]
    public partial class RelationInput : MovieOrchBusinessLayer.MovieService.BaseInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CharacterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChildIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CharacterName {
            get {
                return this.CharacterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CharacterNameField, value) != true)) {
                    this.CharacterNameField = value;
                    this.RaisePropertyChanged("CharacterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChildId {
            get {
                return this.ChildIdField;
            }
            set {
                if ((this.ChildIdField.Equals(value) != true)) {
                    this.ChildIdField = value;
                    this.RaisePropertyChanged("ChildId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WatchlistInput", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Inp" +
        "ut")]
    [System.SerializableAttribute()]
    public partial class WatchlistInput : MovieOrchBusinessLayer.MovieService.BaseInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Genre", Namespace="http://schemas.datacontract.org/2004/07/MovieDataLayer.Enums")]
    public enum Genre : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thriller = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Horror = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Action = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Adventure = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Animation = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Futuristic = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Drama = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FairyTale = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Humor = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Biography = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sex", Namespace="http://schemas.datacontract.org/2004/07/MovieDataLayer.Enums")]
    public enum Sex : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseResponse", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Res" +
        "ponse")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.WatchlistResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.MovieResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.StakeholderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.WatchlistListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.MovieListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.StakeholderListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.MovieService.IdentificationResponse))]
    public partial class BaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.Error[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.Error[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Succes {
            get {
                return this.SuccesField;
            }
            set {
                if ((this.SuccesField.Equals(value) != true)) {
                    this.SuccesField = value;
                    this.RaisePropertyChanged("Succes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WatchlistResponse", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Res" +
        "ponse")]
    [System.SerializableAttribute()]
    public partial class WatchlistResponse : MovieOrchBusinessLayer.MovieService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.ChildMovieResponse[] MoviesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.ChildMovieResponse[] Movies {
            get {
                return this.MoviesField;
            }
            set {
                if ((object.ReferenceEquals(this.MoviesField, value) != true)) {
                    this.MoviesField = value;
                    this.RaisePropertyChanged("Movies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieResponse", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Res" +
        "ponse")]
    [System.SerializableAttribute()]
    public partial class MovieResponse : MovieOrchBusinessLayer.MovieService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.ChildStakeholderResponse[] CastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.ChildStakeholderResponse DirectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.Genre GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaytimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.ChildStakeholderResponse[] Cast {
            get {
                return this.CastField;
            }
            set {
                if ((object.ReferenceEquals(this.CastField, value) != true)) {
                    this.CastField = value;
                    this.RaisePropertyChanged("Cast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cover {
            get {
                return this.CoverField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverField, value) != true)) {
                    this.CoverField = value;
                    this.RaisePropertyChanged("Cover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.ChildStakeholderResponse Director {
            get {
                return this.DirectorField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorField, value) != true)) {
                    this.DirectorField = value;
                    this.RaisePropertyChanged("Director");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.Genre Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((this.GenreField.Equals(value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Playtime {
            get {
                return this.PlaytimeField;
            }
            set {
                if ((this.PlaytimeField.Equals(value) != true)) {
                    this.PlaytimeField = value;
                    this.RaisePropertyChanged("Playtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StakeholderResponse", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Res" +
        "ponse")]
    [System.SerializableAttribute()]
    public partial class StakeholderResponse : MovieOrchBusinessLayer.MovieService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountOscarsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.ChildMovieResponse[] MoviesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.Sex SexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOscars {
            get {
                return this.CountOscarsField;
            }
            set {
                if ((this.CountOscarsField.Equals(value) != true)) {
                    this.CountOscarsField = value;
                    this.RaisePropertyChanged("CountOscars");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.ChildMovieResponse[] Movies {
            get {
                return this.MoviesField;
            }
            set {
                if ((object.ReferenceEquals(this.MoviesField, value) != true)) {
                    this.MoviesField = value;
                    this.RaisePropertyChanged("Movies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.Sex Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WatchlistListResponse", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Res" +
        "ponse")]
    [System.SerializableAttribute()]
    public partial class WatchlistListResponse : MovieOrchBusinessLayer.MovieService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.WatchlistResponse[] WatchlistsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.WatchlistResponse[] Watchlists {
            get {
                return this.WatchlistsField;
            }
            set {
                if ((object.ReferenceEquals(this.WatchlistsField, value) != true)) {
                    this.WatchlistsField = value;
                    this.RaisePropertyChanged("Watchlists");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieListResponse", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Res" +
        "ponse")]
    [System.SerializableAttribute()]
    public partial class MovieListResponse : MovieOrchBusinessLayer.MovieService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.ChildMovieResponse[] MoviesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.ChildMovieResponse[] Movies {
            get {
                return this.MoviesField;
            }
            set {
                if ((object.ReferenceEquals(this.MoviesField, value) != true)) {
                    this.MoviesField = value;
                    this.RaisePropertyChanged("Movies");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StakeholderListResponse", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Res" +
        "ponse")]
    [System.SerializableAttribute()]
    public partial class StakeholderListResponse : MovieOrchBusinessLayer.MovieService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.ChildStakeholderResponse[] StakeholdersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.ChildStakeholderResponse[] Stakeholders {
            get {
                return this.StakeholdersField;
            }
            set {
                if ((object.ReferenceEquals(this.StakeholdersField, value) != true)) {
                    this.StakeholdersField = value;
                    this.RaisePropertyChanged("Stakeholders");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentificationResponse", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Res" +
        "ponse")]
    [System.SerializableAttribute()]
    public partial class IdentificationResponse : MovieOrchBusinessLayer.MovieService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Res" +
        "ponse")]
    [System.SerializableAttribute()]
    public partial class Error : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChildMovieResponse", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Res" +
        "ponse")]
    [System.SerializableAttribute()]
    public partial class ChildMovieResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.MovieService.Genre GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaytimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cover {
            get {
                return this.CoverField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverField, value) != true)) {
                    this.CoverField = value;
                    this.RaisePropertyChanged("Cover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.MovieService.Genre Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((this.GenreField.Equals(value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Playtime {
            get {
                return this.PlaytimeField;
            }
            set {
                if ((this.PlaytimeField.Equals(value) != true)) {
                    this.PlaytimeField = value;
                    this.RaisePropertyChanged("Playtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChildStakeholderResponse", Namespace="http://schemas.datacontract.org/2004/07/MovieCommunicationLayer.DataContracts.Res" +
        "ponse")]
    [System.SerializableAttribute()]
    public partial class ChildStakeholderResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CharacterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CharacterName {
            get {
                return this.CharacterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CharacterNameField, value) != true)) {
                    this.CharacterNameField = value;
                    this.RaisePropertyChanged("CharacterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieService.IMovieService")]
    public interface IMovieService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateWatchlist", ReplyAction="http://tempuri.org/IMovieService/CreateWatchlistResponse")]
        MovieOrchBusinessLayer.MovieService.IdentificationResponse CreateWatchlist(MovieOrchBusinessLayer.MovieService.WatchlistInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateWatchlist", ReplyAction="http://tempuri.org/IMovieService/CreateWatchlistResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.IdentificationResponse> CreateWatchlistAsync(MovieOrchBusinessLayer.MovieService.WatchlistInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateMovie", ReplyAction="http://tempuri.org/IMovieService/CreateMovieResponse")]
        MovieOrchBusinessLayer.MovieService.IdentificationResponse CreateMovie(MovieOrchBusinessLayer.MovieService.MovieInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateMovie", ReplyAction="http://tempuri.org/IMovieService/CreateMovieResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.IdentificationResponse> CreateMovieAsync(MovieOrchBusinessLayer.MovieService.MovieInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateActor", ReplyAction="http://tempuri.org/IMovieService/CreateActorResponse")]
        MovieOrchBusinessLayer.MovieService.IdentificationResponse CreateActor(MovieOrchBusinessLayer.MovieService.StakeholderInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateActor", ReplyAction="http://tempuri.org/IMovieService/CreateActorResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.IdentificationResponse> CreateActorAsync(MovieOrchBusinessLayer.MovieService.StakeholderInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateDirector", ReplyAction="http://tempuri.org/IMovieService/CreateDirectorResponse")]
        MovieOrchBusinessLayer.MovieService.IdentificationResponse CreateDirector(MovieOrchBusinessLayer.MovieService.StakeholderInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateDirector", ReplyAction="http://tempuri.org/IMovieService/CreateDirectorResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.IdentificationResponse> CreateDirectorAsync(MovieOrchBusinessLayer.MovieService.StakeholderInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetWatchlistById", ReplyAction="http://tempuri.org/IMovieService/GetWatchlistByIdResponse")]
        MovieOrchBusinessLayer.MovieService.WatchlistResponse GetWatchlistById(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetWatchlistById", ReplyAction="http://tempuri.org/IMovieService/GetWatchlistByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.WatchlistResponse> GetWatchlistByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetMovieById", ReplyAction="http://tempuri.org/IMovieService/GetMovieByIdResponse")]
        MovieOrchBusinessLayer.MovieService.MovieResponse GetMovieById(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetMovieById", ReplyAction="http://tempuri.org/IMovieService/GetMovieByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.MovieResponse> GetMovieByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetDirectorById", ReplyAction="http://tempuri.org/IMovieService/GetDirectorByIdResponse")]
        MovieOrchBusinessLayer.MovieService.StakeholderResponse GetDirectorById(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetDirectorById", ReplyAction="http://tempuri.org/IMovieService/GetDirectorByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderResponse> GetDirectorByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetActorById", ReplyAction="http://tempuri.org/IMovieService/GetActorByIdResponse")]
        MovieOrchBusinessLayer.MovieService.StakeholderResponse GetActorById(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetActorById", ReplyAction="http://tempuri.org/IMovieService/GetActorByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderResponse> GetActorByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetAllWatchlistsOfUser", ReplyAction="http://tempuri.org/IMovieService/GetAllWatchlistsOfUserResponse")]
        MovieOrchBusinessLayer.MovieService.WatchlistListResponse GetAllWatchlistsOfUser(MovieOrchBusinessLayer.MovieService.MultipleIdentificationsInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetAllWatchlistsOfUser", ReplyAction="http://tempuri.org/IMovieService/GetAllWatchlistsOfUserResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.WatchlistListResponse> GetAllWatchlistsOfUserAsync(MovieOrchBusinessLayer.MovieService.MultipleIdentificationsInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetAllMovies", ReplyAction="http://tempuri.org/IMovieService/GetAllMoviesResponse")]
        MovieOrchBusinessLayer.MovieService.MovieListResponse GetAllMovies(MovieOrchBusinessLayer.MovieService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetAllMovies", ReplyAction="http://tempuri.org/IMovieService/GetAllMoviesResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.MovieListResponse> GetAllMoviesAsync(MovieOrchBusinessLayer.MovieService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetAllDirectors", ReplyAction="http://tempuri.org/IMovieService/GetAllDirectorsResponse")]
        MovieOrchBusinessLayer.MovieService.StakeholderListResponse GetAllDirectors(MovieOrchBusinessLayer.MovieService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetAllDirectors", ReplyAction="http://tempuri.org/IMovieService/GetAllDirectorsResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderListResponse> GetAllDirectorsAsync(MovieOrchBusinessLayer.MovieService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetAllActors", ReplyAction="http://tempuri.org/IMovieService/GetAllActorsResponse")]
        MovieOrchBusinessLayer.MovieService.StakeholderListResponse GetAllActors(MovieOrchBusinessLayer.MovieService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetAllActors", ReplyAction="http://tempuri.org/IMovieService/GetAllActorsResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderListResponse> GetAllActorsAsync(MovieOrchBusinessLayer.MovieService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteWatchlistById", ReplyAction="http://tempuri.org/IMovieService/DeleteWatchlistByIdResponse")]
        MovieOrchBusinessLayer.MovieService.BaseResponse DeleteWatchlistById(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteWatchlistById", ReplyAction="http://tempuri.org/IMovieService/DeleteWatchlistByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteWatchlistByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteMovieById", ReplyAction="http://tempuri.org/IMovieService/DeleteMovieByIdResponse")]
        MovieOrchBusinessLayer.MovieService.BaseResponse DeleteMovieById(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteMovieById", ReplyAction="http://tempuri.org/IMovieService/DeleteMovieByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteMovieByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteDirectorById", ReplyAction="http://tempuri.org/IMovieService/DeleteDirectorByIdResponse")]
        MovieOrchBusinessLayer.MovieService.BaseResponse DeleteDirectorById(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteDirectorById", ReplyAction="http://tempuri.org/IMovieService/DeleteDirectorByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteDirectorByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteActorById", ReplyAction="http://tempuri.org/IMovieService/DeleteActorByIdResponse")]
        MovieOrchBusinessLayer.MovieService.BaseResponse DeleteActorById(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteActorById", ReplyAction="http://tempuri.org/IMovieService/DeleteActorByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteActorByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/AddDirectorToMovie", ReplyAction="http://tempuri.org/IMovieService/AddDirectorToMovieResponse")]
        MovieOrchBusinessLayer.MovieService.MovieResponse AddDirectorToMovie(MovieOrchBusinessLayer.MovieService.RelationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/AddDirectorToMovie", ReplyAction="http://tempuri.org/IMovieService/AddDirectorToMovieResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.MovieResponse> AddDirectorToMovieAsync(MovieOrchBusinessLayer.MovieService.RelationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/AddActorToMovie", ReplyAction="http://tempuri.org/IMovieService/AddActorToMovieResponse")]
        MovieOrchBusinessLayer.MovieService.MovieResponse AddActorToMovie(MovieOrchBusinessLayer.MovieService.RelationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/AddActorToMovie", ReplyAction="http://tempuri.org/IMovieService/AddActorToMovieResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.MovieResponse> AddActorToMovieAsync(MovieOrchBusinessLayer.MovieService.RelationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/AddMovieToWatchList", ReplyAction="http://tempuri.org/IMovieService/AddMovieToWatchListResponse")]
        MovieOrchBusinessLayer.MovieService.WatchlistResponse AddMovieToWatchList(MovieOrchBusinessLayer.MovieService.RelationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/AddMovieToWatchList", ReplyAction="http://tempuri.org/IMovieService/AddMovieToWatchListResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.WatchlistResponse> AddMovieToWatchListAsync(MovieOrchBusinessLayer.MovieService.RelationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteDirectorFromMovie", ReplyAction="http://tempuri.org/IMovieService/DeleteDirectorFromMovieResponse")]
        MovieOrchBusinessLayer.MovieService.BaseResponse DeleteDirectorFromMovie(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteDirectorFromMovie", ReplyAction="http://tempuri.org/IMovieService/DeleteDirectorFromMovieResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteDirectorFromMovieAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteActorFromMovie", ReplyAction="http://tempuri.org/IMovieService/DeleteActorFromMovieResponse")]
        MovieOrchBusinessLayer.MovieService.BaseResponse DeleteActorFromMovie(MovieOrchBusinessLayer.MovieService.RelationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteActorFromMovie", ReplyAction="http://tempuri.org/IMovieService/DeleteActorFromMovieResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteActorFromMovieAsync(MovieOrchBusinessLayer.MovieService.RelationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteMovieFromWatchlist", ReplyAction="http://tempuri.org/IMovieService/DeleteMovieFromWatchlistResponse")]
        MovieOrchBusinessLayer.MovieService.BaseResponse DeleteMovieFromWatchlist(MovieOrchBusinessLayer.MovieService.RelationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteMovieFromWatchlist", ReplyAction="http://tempuri.org/IMovieService/DeleteMovieFromWatchlistResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteMovieFromWatchlistAsync(MovieOrchBusinessLayer.MovieService.RelationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/UpdateActor", ReplyAction="http://tempuri.org/IMovieService/UpdateActorResponse")]
        MovieOrchBusinessLayer.MovieService.StakeholderResponse UpdateActor(MovieOrchBusinessLayer.MovieService.StakeholderInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/UpdateActor", ReplyAction="http://tempuri.org/IMovieService/UpdateActorResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderResponse> UpdateActorAsync(MovieOrchBusinessLayer.MovieService.StakeholderInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/UpdateWatchlist", ReplyAction="http://tempuri.org/IMovieService/UpdateWatchlistResponse")]
        MovieOrchBusinessLayer.MovieService.WatchlistResponse UpdateWatchlist(MovieOrchBusinessLayer.MovieService.WatchlistInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/UpdateWatchlist", ReplyAction="http://tempuri.org/IMovieService/UpdateWatchlistResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.WatchlistResponse> UpdateWatchlistAsync(MovieOrchBusinessLayer.MovieService.WatchlistInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/UpdateDirector", ReplyAction="http://tempuri.org/IMovieService/UpdateDirectorResponse")]
        MovieOrchBusinessLayer.MovieService.StakeholderResponse UpdateDirector(MovieOrchBusinessLayer.MovieService.StakeholderInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/UpdateDirector", ReplyAction="http://tempuri.org/IMovieService/UpdateDirectorResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderResponse> UpdateDirectorAsync(MovieOrchBusinessLayer.MovieService.StakeholderInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/UpdateMovie", ReplyAction="http://tempuri.org/IMovieService/UpdateMovieResponse")]
        MovieOrchBusinessLayer.MovieService.MovieResponse UpdateMovie(MovieOrchBusinessLayer.MovieService.MovieInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/UpdateMovie", ReplyAction="http://tempuri.org/IMovieService/UpdateMovieResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.MovieResponse> UpdateMovieAsync(MovieOrchBusinessLayer.MovieService.MovieInput input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMovieServiceChannel : MovieOrchBusinessLayer.MovieService.IMovieService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MovieServiceClient : System.ServiceModel.ClientBase<MovieOrchBusinessLayer.MovieService.IMovieService>, MovieOrchBusinessLayer.MovieService.IMovieService {
        
        public MovieServiceClient() {
        }
        
        public MovieServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MovieServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MovieOrchBusinessLayer.MovieService.IdentificationResponse CreateWatchlist(MovieOrchBusinessLayer.MovieService.WatchlistInput input) {
            return base.Channel.CreateWatchlist(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.IdentificationResponse> CreateWatchlistAsync(MovieOrchBusinessLayer.MovieService.WatchlistInput input) {
            return base.Channel.CreateWatchlistAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.IdentificationResponse CreateMovie(MovieOrchBusinessLayer.MovieService.MovieInput input) {
            return base.Channel.CreateMovie(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.IdentificationResponse> CreateMovieAsync(MovieOrchBusinessLayer.MovieService.MovieInput input) {
            return base.Channel.CreateMovieAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.IdentificationResponse CreateActor(MovieOrchBusinessLayer.MovieService.StakeholderInput input) {
            return base.Channel.CreateActor(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.IdentificationResponse> CreateActorAsync(MovieOrchBusinessLayer.MovieService.StakeholderInput input) {
            return base.Channel.CreateActorAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.IdentificationResponse CreateDirector(MovieOrchBusinessLayer.MovieService.StakeholderInput input) {
            return base.Channel.CreateDirector(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.IdentificationResponse> CreateDirectorAsync(MovieOrchBusinessLayer.MovieService.StakeholderInput input) {
            return base.Channel.CreateDirectorAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.WatchlistResponse GetWatchlistById(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.GetWatchlistById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.WatchlistResponse> GetWatchlistByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.GetWatchlistByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.MovieResponse GetMovieById(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.GetMovieById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.MovieResponse> GetMovieByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.GetMovieByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.StakeholderResponse GetDirectorById(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.GetDirectorById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderResponse> GetDirectorByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.GetDirectorByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.StakeholderResponse GetActorById(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.GetActorById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderResponse> GetActorByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.GetActorByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.WatchlistListResponse GetAllWatchlistsOfUser(MovieOrchBusinessLayer.MovieService.MultipleIdentificationsInput input) {
            return base.Channel.GetAllWatchlistsOfUser(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.WatchlistListResponse> GetAllWatchlistsOfUserAsync(MovieOrchBusinessLayer.MovieService.MultipleIdentificationsInput input) {
            return base.Channel.GetAllWatchlistsOfUserAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.MovieListResponse GetAllMovies(MovieOrchBusinessLayer.MovieService.BaseInput input) {
            return base.Channel.GetAllMovies(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.MovieListResponse> GetAllMoviesAsync(MovieOrchBusinessLayer.MovieService.BaseInput input) {
            return base.Channel.GetAllMoviesAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.StakeholderListResponse GetAllDirectors(MovieOrchBusinessLayer.MovieService.BaseInput input) {
            return base.Channel.GetAllDirectors(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderListResponse> GetAllDirectorsAsync(MovieOrchBusinessLayer.MovieService.BaseInput input) {
            return base.Channel.GetAllDirectorsAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.StakeholderListResponse GetAllActors(MovieOrchBusinessLayer.MovieService.BaseInput input) {
            return base.Channel.GetAllActors(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderListResponse> GetAllActorsAsync(MovieOrchBusinessLayer.MovieService.BaseInput input) {
            return base.Channel.GetAllActorsAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.BaseResponse DeleteWatchlistById(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.DeleteWatchlistById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteWatchlistByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.DeleteWatchlistByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.BaseResponse DeleteMovieById(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.DeleteMovieById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteMovieByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.DeleteMovieByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.BaseResponse DeleteDirectorById(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.DeleteDirectorById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteDirectorByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.DeleteDirectorByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.BaseResponse DeleteActorById(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.DeleteActorById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteActorByIdAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.DeleteActorByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.MovieResponse AddDirectorToMovie(MovieOrchBusinessLayer.MovieService.RelationInput input) {
            return base.Channel.AddDirectorToMovie(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.MovieResponse> AddDirectorToMovieAsync(MovieOrchBusinessLayer.MovieService.RelationInput input) {
            return base.Channel.AddDirectorToMovieAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.MovieResponse AddActorToMovie(MovieOrchBusinessLayer.MovieService.RelationInput input) {
            return base.Channel.AddActorToMovie(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.MovieResponse> AddActorToMovieAsync(MovieOrchBusinessLayer.MovieService.RelationInput input) {
            return base.Channel.AddActorToMovieAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.WatchlistResponse AddMovieToWatchList(MovieOrchBusinessLayer.MovieService.RelationInput input) {
            return base.Channel.AddMovieToWatchList(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.WatchlistResponse> AddMovieToWatchListAsync(MovieOrchBusinessLayer.MovieService.RelationInput input) {
            return base.Channel.AddMovieToWatchListAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.BaseResponse DeleteDirectorFromMovie(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.DeleteDirectorFromMovie(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteDirectorFromMovieAsync(MovieOrchBusinessLayer.MovieService.IdentificationInput input) {
            return base.Channel.DeleteDirectorFromMovieAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.BaseResponse DeleteActorFromMovie(MovieOrchBusinessLayer.MovieService.RelationInput input) {
            return base.Channel.DeleteActorFromMovie(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteActorFromMovieAsync(MovieOrchBusinessLayer.MovieService.RelationInput input) {
            return base.Channel.DeleteActorFromMovieAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.BaseResponse DeleteMovieFromWatchlist(MovieOrchBusinessLayer.MovieService.RelationInput input) {
            return base.Channel.DeleteMovieFromWatchlist(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.BaseResponse> DeleteMovieFromWatchlistAsync(MovieOrchBusinessLayer.MovieService.RelationInput input) {
            return base.Channel.DeleteMovieFromWatchlistAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.StakeholderResponse UpdateActor(MovieOrchBusinessLayer.MovieService.StakeholderInput input) {
            return base.Channel.UpdateActor(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderResponse> UpdateActorAsync(MovieOrchBusinessLayer.MovieService.StakeholderInput input) {
            return base.Channel.UpdateActorAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.WatchlistResponse UpdateWatchlist(MovieOrchBusinessLayer.MovieService.WatchlistInput input) {
            return base.Channel.UpdateWatchlist(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.WatchlistResponse> UpdateWatchlistAsync(MovieOrchBusinessLayer.MovieService.WatchlistInput input) {
            return base.Channel.UpdateWatchlistAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.StakeholderResponse UpdateDirector(MovieOrchBusinessLayer.MovieService.StakeholderInput input) {
            return base.Channel.UpdateDirector(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.StakeholderResponse> UpdateDirectorAsync(MovieOrchBusinessLayer.MovieService.StakeholderInput input) {
            return base.Channel.UpdateDirectorAsync(input);
        }
        
        public MovieOrchBusinessLayer.MovieService.MovieResponse UpdateMovie(MovieOrchBusinessLayer.MovieService.MovieInput input) {
            return base.Channel.UpdateMovie(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.MovieService.MovieResponse> UpdateMovieAsync(MovieOrchBusinessLayer.MovieService.MovieInput input) {
            return base.Channel.UpdateMovieAsync(input);
        }
    }
}
