//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieOrchBusinessLayer.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseInput", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Inpu" +
        "t")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.ClientInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.WatchlistInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.IdentificationInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.RelationsInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.AchievementInput))]
    public partial class BaseInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientInput", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Inpu" +
        "t")]
    [System.SerializableAttribute()]
    public partial class ClientInput : MovieOrchBusinessLayer.UserService.BaseInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientPassword {
            get {
                return this.ClientPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientPasswordField, value) != true)) {
                    this.ClientPasswordField = value;
                    this.RaisePropertyChanged("ClientPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WatchlistInput", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Inpu" +
        "t")]
    [System.SerializableAttribute()]
    public partial class WatchlistInput : MovieOrchBusinessLayer.UserService.BaseInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentificationInput", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Inpu" +
        "t")]
    [System.SerializableAttribute()]
    public partial class IdentificationInput : MovieOrchBusinessLayer.UserService.BaseInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelationsInput", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Inpu" +
        "t")]
    [System.SerializableAttribute()]
    public partial class RelationsInput : MovieOrchBusinessLayer.UserService.BaseInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChildIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChildId {
            get {
                return this.ChildIdField;
            }
            set {
                if ((this.ChildIdField.Equals(value) != true)) {
                    this.ChildIdField = value;
                    this.RaisePropertyChanged("ChildId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementInput", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Inpu" +
        "t")]
    [System.SerializableAttribute()]
    public partial class AchievementInput : MovieOrchBusinessLayer.UserService.BaseInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseResponse", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Resp" +
        "onse")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.AchievementResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.ClientResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.UserResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.AchievementListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.ClientListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.IdentificationResponse))]
    public partial class BaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.UserService.Error[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.UserService.Error[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Succes {
            get {
                return this.SuccesField;
            }
            set {
                if ((this.SuccesField.Equals(value) != true)) {
                    this.SuccesField = value;
                    this.RaisePropertyChanged("Succes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementResponse", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Resp" +
        "onse")]
    [System.SerializableAttribute()]
    public partial class AchievementResponse : MovieOrchBusinessLayer.UserService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.UserService.ClientResponse[] UsersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.UserService.ClientResponse[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientResponse", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Resp" +
        "onse")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MovieOrchBusinessLayer.UserService.UserResponse))]
    public partial class ClientResponse : MovieOrchBusinessLayer.UserService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserResponse", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Resp" +
        "onse")]
    [System.SerializableAttribute()]
    public partial class UserResponse : MovieOrchBusinessLayer.UserService.ClientResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.UserService.AchievementResponse[] AchievementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.UserService.ClientResponse[] FriendsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.UserService.WatchlistResponse[] WatchlistsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.UserService.AchievementResponse[] Achievements {
            get {
                return this.AchievementsField;
            }
            set {
                if ((object.ReferenceEquals(this.AchievementsField, value) != true)) {
                    this.AchievementsField = value;
                    this.RaisePropertyChanged("Achievements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.UserService.ClientResponse[] Friends {
            get {
                return this.FriendsField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendsField, value) != true)) {
                    this.FriendsField = value;
                    this.RaisePropertyChanged("Friends");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.UserService.WatchlistResponse[] Watchlists {
            get {
                return this.WatchlistsField;
            }
            set {
                if ((object.ReferenceEquals(this.WatchlistsField, value) != true)) {
                    this.WatchlistsField = value;
                    this.RaisePropertyChanged("Watchlists");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementListResponse", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Resp" +
        "onse")]
    [System.SerializableAttribute()]
    public partial class AchievementListResponse : MovieOrchBusinessLayer.UserService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.UserService.AchievementResponse[] AchievementsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.UserService.AchievementResponse[] Achievements {
            get {
                return this.AchievementsField;
            }
            set {
                if ((object.ReferenceEquals(this.AchievementsField, value) != true)) {
                    this.AchievementsField = value;
                    this.RaisePropertyChanged("Achievements");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientListResponse", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Resp" +
        "onse")]
    [System.SerializableAttribute()]
    public partial class ClientListResponse : MovieOrchBusinessLayer.UserService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieOrchBusinessLayer.UserService.ClientResponse[] ClientsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieOrchBusinessLayer.UserService.ClientResponse[] Clients {
            get {
                return this.ClientsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientsField, value) != true)) {
                    this.ClientsField = value;
                    this.RaisePropertyChanged("Clients");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentificationResponse", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Resp" +
        "onse")]
    [System.SerializableAttribute()]
    public partial class IdentificationResponse : MovieOrchBusinessLayer.UserService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Resp" +
        "onse")]
    [System.SerializableAttribute()]
    public partial class Error : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WatchlistResponse", Namespace="http://schemas.datacontract.org/2004/07/UserCommunicationLayer.DataContracts.Resp" +
        "onse")]
    [System.SerializableAttribute()]
    public partial class WatchlistResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateAchievement", ReplyAction="http://tempuri.org/IUserService/CreateAchievementResponse")]
        MovieOrchBusinessLayer.UserService.IdentificationResponse CreateAchievement(MovieOrchBusinessLayer.UserService.AchievementInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateAchievement", ReplyAction="http://tempuri.org/IUserService/CreateAchievementResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.IdentificationResponse> CreateAchievementAsync(MovieOrchBusinessLayer.UserService.AchievementInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateAdmin", ReplyAction="http://tempuri.org/IUserService/CreateAdminResponse")]
        MovieOrchBusinessLayer.UserService.IdentificationResponse CreateAdmin(MovieOrchBusinessLayer.UserService.ClientInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateAdmin", ReplyAction="http://tempuri.org/IUserService/CreateAdminResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.IdentificationResponse> CreateAdminAsync(MovieOrchBusinessLayer.UserService.ClientInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        MovieOrchBusinessLayer.UserService.IdentificationResponse CreateUser(MovieOrchBusinessLayer.UserService.ClientInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.IdentificationResponse> CreateUserAsync(MovieOrchBusinessLayer.UserService.ClientInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddWatchListToUser", ReplyAction="http://tempuri.org/IUserService/AddWatchListToUserResponse")]
        MovieOrchBusinessLayer.UserService.IdentificationResponse AddWatchListToUser(MovieOrchBusinessLayer.UserService.WatchlistInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddWatchListToUser", ReplyAction="http://tempuri.org/IUserService/AddWatchListToUserResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.IdentificationResponse> AddWatchListToUserAsync(MovieOrchBusinessLayer.UserService.WatchlistInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteAchievementById", ReplyAction="http://tempuri.org/IUserService/DeleteAchievementByIdResponse")]
        MovieOrchBusinessLayer.UserService.BaseResponse DeleteAchievementById(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteAchievementById", ReplyAction="http://tempuri.org/IUserService/DeleteAchievementByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.BaseResponse> DeleteAchievementByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteAdminById", ReplyAction="http://tempuri.org/IUserService/DeleteAdminByIdResponse")]
        MovieOrchBusinessLayer.UserService.BaseResponse DeleteAdminById(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteAdminById", ReplyAction="http://tempuri.org/IUserService/DeleteAdminByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.BaseResponse> DeleteAdminByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUserById", ReplyAction="http://tempuri.org/IUserService/DeleteUserByIdResponse")]
        MovieOrchBusinessLayer.UserService.BaseResponse DeleteUserById(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUserById", ReplyAction="http://tempuri.org/IUserService/DeleteUserByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.BaseResponse> DeleteUserByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteWatchlistById", ReplyAction="http://tempuri.org/IUserService/DeleteWatchlistByIdResponse")]
        MovieOrchBusinessLayer.UserService.BaseResponse DeleteWatchlistById(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteWatchlistById", ReplyAction="http://tempuri.org/IUserService/DeleteWatchlistByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.BaseResponse> DeleteWatchlistByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAchievementById", ReplyAction="http://tempuri.org/IUserService/GetAchievementByIdResponse")]
        MovieOrchBusinessLayer.UserService.AchievementResponse GetAchievementById(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAchievementById", ReplyAction="http://tempuri.org/IUserService/GetAchievementByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.AchievementResponse> GetAchievementByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdminById", ReplyAction="http://tempuri.org/IUserService/GetAdminByIdResponse")]
        MovieOrchBusinessLayer.UserService.ClientResponse GetAdminById(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdminById", ReplyAction="http://tempuri.org/IUserService/GetAdminByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.ClientResponse> GetAdminByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        MovieOrchBusinessLayer.UserService.UserResponse GetUserById(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.UserResponse> GetUserByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllAchievements", ReplyAction="http://tempuri.org/IUserService/GetAllAchievementsResponse")]
        MovieOrchBusinessLayer.UserService.AchievementListResponse GetAllAchievements(MovieOrchBusinessLayer.UserService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllAchievements", ReplyAction="http://tempuri.org/IUserService/GetAllAchievementsResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.AchievementListResponse> GetAllAchievementsAsync(MovieOrchBusinessLayer.UserService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllAdmins", ReplyAction="http://tempuri.org/IUserService/GetAllAdminsResponse")]
        MovieOrchBusinessLayer.UserService.ClientListResponse GetAllAdmins(MovieOrchBusinessLayer.UserService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllAdmins", ReplyAction="http://tempuri.org/IUserService/GetAllAdminsResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.ClientListResponse> GetAllAdminsAsync(MovieOrchBusinessLayer.UserService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUsers", ReplyAction="http://tempuri.org/IUserService/GetAllUsersResponse")]
        MovieOrchBusinessLayer.UserService.ClientListResponse GetAllUsers(MovieOrchBusinessLayer.UserService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUsers", ReplyAction="http://tempuri.org/IUserService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.ClientListResponse> GetAllUsersAsync(MovieOrchBusinessLayer.UserService.BaseInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddAchievementToUser", ReplyAction="http://tempuri.org/IUserService/AddAchievementToUserResponse")]
        MovieOrchBusinessLayer.UserService.UserResponse AddAchievementToUser(MovieOrchBusinessLayer.UserService.RelationsInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddAchievementToUser", ReplyAction="http://tempuri.org/IUserService/AddAchievementToUserResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.UserResponse> AddAchievementToUserAsync(MovieOrchBusinessLayer.UserService.RelationsInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddFriend", ReplyAction="http://tempuri.org/IUserService/AddFriendResponse")]
        MovieOrchBusinessLayer.UserService.UserResponse AddFriend(MovieOrchBusinessLayer.UserService.RelationsInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddFriend", ReplyAction="http://tempuri.org/IUserService/AddFriendResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.UserResponse> AddFriendAsync(MovieOrchBusinessLayer.UserService.RelationsInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteFriend", ReplyAction="http://tempuri.org/IUserService/DeleteFriendResponse")]
        MovieOrchBusinessLayer.UserService.BaseResponse DeleteFriend(MovieOrchBusinessLayer.UserService.RelationsInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteFriend", ReplyAction="http://tempuri.org/IUserService/DeleteFriendResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.BaseResponse> DeleteFriendAsync(MovieOrchBusinessLayer.UserService.RelationsInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAchievement", ReplyAction="http://tempuri.org/IUserService/UpdateAchievementResponse")]
        MovieOrchBusinessLayer.UserService.AchievementResponse UpdateAchievement(MovieOrchBusinessLayer.UserService.AchievementInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAchievement", ReplyAction="http://tempuri.org/IUserService/UpdateAchievementResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.AchievementResponse> UpdateAchievementAsync(MovieOrchBusinessLayer.UserService.AchievementInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAdmin", ReplyAction="http://tempuri.org/IUserService/UpdateAdminResponse")]
        MovieOrchBusinessLayer.UserService.ClientResponse UpdateAdmin(MovieOrchBusinessLayer.UserService.ClientInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAdmin", ReplyAction="http://tempuri.org/IUserService/UpdateAdminResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.ClientResponse> UpdateAdminAsync(MovieOrchBusinessLayer.UserService.ClientInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        MovieOrchBusinessLayer.UserService.ClientResponse UpdateUser(MovieOrchBusinessLayer.UserService.ClientInput input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.ClientResponse> UpdateUserAsync(MovieOrchBusinessLayer.UserService.ClientInput input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : MovieOrchBusinessLayer.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<MovieOrchBusinessLayer.UserService.IUserService>, MovieOrchBusinessLayer.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MovieOrchBusinessLayer.UserService.IdentificationResponse CreateAchievement(MovieOrchBusinessLayer.UserService.AchievementInput input) {
            return base.Channel.CreateAchievement(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.IdentificationResponse> CreateAchievementAsync(MovieOrchBusinessLayer.UserService.AchievementInput input) {
            return base.Channel.CreateAchievementAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.IdentificationResponse CreateAdmin(MovieOrchBusinessLayer.UserService.ClientInput input) {
            return base.Channel.CreateAdmin(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.IdentificationResponse> CreateAdminAsync(MovieOrchBusinessLayer.UserService.ClientInput input) {
            return base.Channel.CreateAdminAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.IdentificationResponse CreateUser(MovieOrchBusinessLayer.UserService.ClientInput input) {
            return base.Channel.CreateUser(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.IdentificationResponse> CreateUserAsync(MovieOrchBusinessLayer.UserService.ClientInput input) {
            return base.Channel.CreateUserAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.IdentificationResponse AddWatchListToUser(MovieOrchBusinessLayer.UserService.WatchlistInput input) {
            return base.Channel.AddWatchListToUser(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.IdentificationResponse> AddWatchListToUserAsync(MovieOrchBusinessLayer.UserService.WatchlistInput input) {
            return base.Channel.AddWatchListToUserAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.BaseResponse DeleteAchievementById(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.DeleteAchievementById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.BaseResponse> DeleteAchievementByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.DeleteAchievementByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.BaseResponse DeleteAdminById(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.DeleteAdminById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.BaseResponse> DeleteAdminByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.DeleteAdminByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.BaseResponse DeleteUserById(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.DeleteUserById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.BaseResponse> DeleteUserByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.DeleteUserByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.BaseResponse DeleteWatchlistById(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.DeleteWatchlistById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.BaseResponse> DeleteWatchlistByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.DeleteWatchlistByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.AchievementResponse GetAchievementById(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.GetAchievementById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.AchievementResponse> GetAchievementByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.GetAchievementByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.ClientResponse GetAdminById(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.GetAdminById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.ClientResponse> GetAdminByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.GetAdminByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.UserResponse GetUserById(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.GetUserById(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.UserResponse> GetUserByIdAsync(MovieOrchBusinessLayer.UserService.IdentificationInput input) {
            return base.Channel.GetUserByIdAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.AchievementListResponse GetAllAchievements(MovieOrchBusinessLayer.UserService.BaseInput input) {
            return base.Channel.GetAllAchievements(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.AchievementListResponse> GetAllAchievementsAsync(MovieOrchBusinessLayer.UserService.BaseInput input) {
            return base.Channel.GetAllAchievementsAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.ClientListResponse GetAllAdmins(MovieOrchBusinessLayer.UserService.BaseInput input) {
            return base.Channel.GetAllAdmins(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.ClientListResponse> GetAllAdminsAsync(MovieOrchBusinessLayer.UserService.BaseInput input) {
            return base.Channel.GetAllAdminsAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.ClientListResponse GetAllUsers(MovieOrchBusinessLayer.UserService.BaseInput input) {
            return base.Channel.GetAllUsers(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.ClientListResponse> GetAllUsersAsync(MovieOrchBusinessLayer.UserService.BaseInput input) {
            return base.Channel.GetAllUsersAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.UserResponse AddAchievementToUser(MovieOrchBusinessLayer.UserService.RelationsInput input) {
            return base.Channel.AddAchievementToUser(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.UserResponse> AddAchievementToUserAsync(MovieOrchBusinessLayer.UserService.RelationsInput input) {
            return base.Channel.AddAchievementToUserAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.UserResponse AddFriend(MovieOrchBusinessLayer.UserService.RelationsInput input) {
            return base.Channel.AddFriend(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.UserResponse> AddFriendAsync(MovieOrchBusinessLayer.UserService.RelationsInput input) {
            return base.Channel.AddFriendAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.BaseResponse DeleteFriend(MovieOrchBusinessLayer.UserService.RelationsInput input) {
            return base.Channel.DeleteFriend(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.BaseResponse> DeleteFriendAsync(MovieOrchBusinessLayer.UserService.RelationsInput input) {
            return base.Channel.DeleteFriendAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.AchievementResponse UpdateAchievement(MovieOrchBusinessLayer.UserService.AchievementInput input) {
            return base.Channel.UpdateAchievement(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.AchievementResponse> UpdateAchievementAsync(MovieOrchBusinessLayer.UserService.AchievementInput input) {
            return base.Channel.UpdateAchievementAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.ClientResponse UpdateAdmin(MovieOrchBusinessLayer.UserService.ClientInput input) {
            return base.Channel.UpdateAdmin(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.ClientResponse> UpdateAdminAsync(MovieOrchBusinessLayer.UserService.ClientInput input) {
            return base.Channel.UpdateAdminAsync(input);
        }
        
        public MovieOrchBusinessLayer.UserService.ClientResponse UpdateUser(MovieOrchBusinessLayer.UserService.ClientInput input) {
            return base.Channel.UpdateUser(input);
        }
        
        public System.Threading.Tasks.Task<MovieOrchBusinessLayer.UserService.ClientResponse> UpdateUserAsync(MovieOrchBusinessLayer.UserService.ClientInput input) {
            return base.Channel.UpdateUserAsync(input);
        }
    }
}
